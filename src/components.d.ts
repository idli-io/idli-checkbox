/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface IdliCheckbox {
    'controlLabel': string;
    /**
    * If true, the user cannot interact with the button. Defaults to `false`.
    */
    'disabled': boolean;
    /**
    * If true, the form will be in inline format. Defaults to `false`.
    */
    'inline': boolean;
    /**
    * The input field label.
    */
    'label': string;
    /**
    * The button size. Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
    */
    'size': 'sm' | 'md' | 'lg';
    /**
    * The input field value.
    */
    'value': boolean;
    /**
    * Button variants Possible values are `"default"`, `"dashed"`. Defaults to `"default"`.
    */
    'variant': 'default' | 'dashed';
  }
}

declare global {


  interface HTMLIdliCheckboxElement extends Components.IdliCheckbox, HTMLStencilElement {}
  var HTMLIdliCheckboxElement: {
    prototype: HTMLIdliCheckboxElement;
    new (): HTMLIdliCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    'idli-checkbox': HTMLIdliCheckboxElement;
  }
}

declare namespace LocalJSX {
  interface IdliCheckbox {
    'controlLabel'?: string;
    /**
    * If true, the user cannot interact with the button. Defaults to `false`.
    */
    'disabled'?: boolean;
    /**
    * If true, the form will be in inline format. Defaults to `false`.
    */
    'inline'?: boolean;
    /**
    * The input field label.
    */
    'label'?: string;
    /**
    * On change of input a CustomEvent 'inputChange' will be triggered. Event details contains parent event, oldValue, newValue of input.
    */
    'onInputChange'?: (event: CustomEvent<any>) => void;
    /**
    * The button size. Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
    */
    'size'?: 'sm' | 'md' | 'lg';
    /**
    * The input field value.
    */
    'value'?: boolean;
    /**
    * Button variants Possible values are `"default"`, `"dashed"`. Defaults to `"default"`.
    */
    'variant'?: 'default' | 'dashed';
  }

  interface IntrinsicElements {
    'idli-checkbox': IdliCheckbox;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'idli-checkbox': LocalJSX.IdliCheckbox & JSXBase.HTMLAttributes<HTMLIdliCheckboxElement>;
    }
  }
}


